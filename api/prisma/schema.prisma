generator client {
  provider = "prisma-client-js"
  DATABASE_URL="postgresql://postgres:pass@localhost:5000/build_my_rig?schema=public"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ComponentType {
  id                 Int              @default(autoincrement()) @id
  name               String           @unique
  description        String?
  order              Int
  Components         Component[]
  SpecificationTypes SpecificationType[]
}

model Component {
  id               Int             @default(autoincrement()) @id
  productId        String          @unique
  model            String          @unique
  componentType    ComponentType   @relation(fields: [componentTypeId], references: [id], onDelete: Cascade)
  componentTypeId  Int
  Specifications   ComponentSpecification[]
}

model SpecificationType {
  id                Int             @default(autoincrement()) @id
  name              String
  description       String?
  valueType         String?
  filterType        String?
  componentType     ComponentType?  @relation(fields: [componentTypeId], references: [id], onDelete: Cascade)
  componentTypeId   Int?
  Specifications    Specification[]
}

model Specification {
  id               Int             @default(autoincrement()) @id
  value            String
  description      String?
  specificationType SpecificationType @relation(fields: [specificationTypeId], references: [id], onDelete: Cascade)
  specificationTypeId Int
  Components       ComponentSpecification[]
}

model ComponentSpecification {
  componentId     Int
  specificationId Int
  component       Component      @relation(fields: [componentId], references: [id], onDelete: Cascade)
  specification   Specification  @relation(fields: [specificationId], references: [id], onDelete: Cascade)

  @@id([componentId, specificationId])
}
